/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        holdtap: holdtap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLDTAP";
            bindings = <&mo>, <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    macros {
        paste: paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp V &kp I &kp W &kp P>;
            label = "PASTE";
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            bindings = <&kp ESCAPE>;
            key-positions = <41 42>;
        };

        combo_tab {
            bindings = <&kp TAB>;
            key-positions = <32 31>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        framtid {
            bindings = <
&none  &none       &none           &none             &none        &none  &none                                                                       &none      &none  &none        &none              &none            &none              &none
&none  &kp Q       &kp W           &kp E             &kp R        &kp T  &none                                                                       &none      &kp Y  &kp U        &kp I              &kp O            &kp P              &none
&mo 3  &hm LGUI A  &hm LEFT_ALT S  &hm LEFT_SHIFT D  &hm LCTRL F  &kp G  &none          &holdtap 2 2  &holdtap 1 1      &holdtap 1 1   &holdtap 2 2  &none      &kp H  &hm RCTRL J  &hm RIGHT_SHIFT K  &hm RIGHT_ALT L  &hm RIGHT_GUI RET  &none
&none  &kp Z       &kp X           &kp C             &kp V        &kp B                               &kp LEFT_GUI      &kp RIGHT_GUI                           &kp N  &kp M        &kp COMMA          &kp DOT          &none              &none
&none  &none       &none           &none             &paste              &kp BACKSPACE  &mo 2         &mo 1             &mo 1          &mo 2         &kp SPACE         &none        &none              &none            &none              &none
            >;

            label = "test";
        };

        num {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans  &trans           &trans
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &trans                                      &trans  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0           &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &kp N4  &kp N5  &kp N6  &kp KP_PLUS      &kp KP_EQUAL
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &kp N1  &kp N2  &kp N3  &kp KP_SUBTRACT  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans  &trans           &trans
            >;
        };

        symbol {
            bindings = <
&trans  &trans        &trans                     &trans                     &trans                             &trans            &trans                                      &trans  &trans         &trans                   &trans                 &trans               &trans                  &trans
&trans  &kp LS(EXCL)  &kp LS(DQT)                &kp LS(POUND)              &kp DOLLAR                         &kp LS(PRCNT)     &trans                                      &trans  &kp LS(AMPS)   &kp TILDE                &kp GRAVE              &kp SINGLE_QUOTE     &trans                  &trans
&trans  &trans        &hm LEFT_ALT LEFT_BRACKET  &hm LEFT_SHIFT LEFT_BRACE  &hm LEFT_CONTROL LEFT_PARENTHESIS  &kp LESS_THAN     &trans  &trans  &trans      &trans  &trans  &trans  &kp SLASH      &hm RIGHT_CONTROL MINUS  &hm RIGHT_SHIFT EQUAL  &hm RIGHT_ALT COLON  &hm RIGHT_GUI QUESTION  &trans
&trans  &trans        &kp RIGHT_BRACKET          &kp RIGHT_BRACE            &kp RIGHT_PARENTHESIS              &kp GREATER_THAN                  &trans      &trans                  &kp BACKSLASH  &kp UNDERSCORE           &kp PLUS               &kp SEMICOLON        &kp PIPE                &trans
&trans  &trans        &trans                     &trans                     &trans                                               &trans  &trans  &trans      &trans  &trans  &trans                 &trans                   &trans                 &trans               &trans                  &trans
            >;
        };

        nav {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans          &trans          &trans        &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans          &trans          &trans        &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &kp HOME        &kp PAGE_DOWN   &kp PAGE_UP   &kp END    &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans                  &trans          &trans        &trans     &trans  &trans
            >;
        };

        layer_fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &trans                                      &trans  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &to 5       &to 4   &trans  &trans  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                             &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                       &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &to 5  &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                      &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none  &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };
    };
};
